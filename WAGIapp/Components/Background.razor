@using WAGIapp.AI;
@inject IJSRuntime JS
<div id="graph" style="position: fixed; z-index: -1; width: 100%; height: 100%"></div>

@if (Data is GraphMemoryData graphData)
{
    <MudPaper Style="width: 500px; overflow-y: hidden; overflow-x: hidden; max-height: 700px; border: solid; color: white; border-width: 2px">
        @foreach (var node in graphData.nodes)
        {
            <p>@node.id - @node.name - @node.text</p>
        }
    </MudPaper>
}





@code {

    protected object Data { get; set; }
  

    protected override void OnAfterRender(bool firstRender)
    {
        if (!firstRender)
            return;

        Task.Run(async () =>
        {

while (true)
            {
                await Task.Delay(1000);
                if (Master.Singleton.Memory.MemoryChanged)
                {

      
                    Data = Master.Singleton.Memory.GetGraphData();

                    await InvokeAsync(StateHasChanged);
                }



                StateHasChanged();
            }





        });
    }
}